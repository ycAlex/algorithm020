#关键是如何一次循环搜索完毕
#比较震惊这种写法，因为行，列，3*3只允许有一个
#所以对于行：定义一个长度为9的数组，每个元素为字典，k-数字，v-次数；列一样
#对于3*3定义一个3*3的二维数组，每个元素都是字典
#然后通过走到的位置，来填入对应的行，列和3*3的Box，只要value>1，直接返回false

def isValidSudoku(arrs):
    row = [{} for _ in range(9)]
    cols = [{} for _ in range(9)]
    boxs = [[{} for i in range(3)] for j in range(3)]
    
    for i in range(9):
        for j in range(9):
            tmp = arrs[i][j]
            if tmp !='.':
                row[i][tmp] = row[i].get(tmp,0)+1
                cols[j][tmp] = cols[j].get(tmp,0)+1
                boxs[i//3][j//3][tmp] = boxs[i//3][j//3].get(tmp,0)+1
            
                if row[i][tmp]>1 or cols[j][tmp]>1 or boxs[i//3][j//3][tmp]>1:
                    return False
    
    return True


grid = [["5","3",".",".","7",".",".",".","."],["6",".",".","1","9","5",".",".","."],[".","9","8",".",".",".",".","6","."],["8",".",".",".","6",".",".",".","3"],["4",".",".","8",".","3",".",".","1"],["7",".",".",".","2",".",".",".","6"],[".","6",".",".",".",".","2","8","."],[".",".",".","4","1","9",".",".","5"],[".",".",".",".","8",".",".","7","9"]]

print( isValidSudoku(grid))
